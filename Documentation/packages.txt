-*-outline-*-

* Packages

Currently, packages correspond one-to-one to files in the filesystem.

Files have the suffix ".ell".

There are multiple search paths for packages, which are searched in
order.

** (import &rest paths)

Path has to be an absolute path naming the package, without file
extension, e.g. "/net/http".

All exported bindings from the imported package become visible in the
importing package.

A mechanism for accessing non-exported bindings will be provided in
the future.

`import' forms have to appear together with `export' forms before any
definitions or expressions in the file, and cannot be generated by
macros.  (The restriction on generating import forms with macros may
be lifted in the future, however. See "Extending the Scope of
Syntactic Abstraction", by Waddell and Dybvig, POPL 1999.)

*** Examples

(import "/net/http")

(import "/net/tcp"
        "/net/udp")

** (export &rest names)

To make bindings in a package available to importing packages, they
have to be exported.

Exporting a name exports both the variable as well as the function
binding.

`export' forms have to appear together with `import' forms before any
definitions or expressions in the file, and cannot be generated by
macros.

*** Examples

(export foo)

(export *global-var*
        my-function
        my-macro
        <some-class>)
